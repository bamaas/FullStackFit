version: '3.7'
services:

  # test:
  #   container_name: fit_test
  #   build:
  #     context: ./test
  #     dockerfile: Dockerfile
  #   volumes:
  #     - './test:/src'
  #   network_mode: host
  #   command: -d logs testsuites

  # With the use of this reverse proxy both the frontend and backend are accessable through port 80.
  # In this way I expose an public api
  # Backend adress: baseURL/api/
  reverseproxy:
    container_name: fit_reverseproxy-test
    ports:
      - 80:80
    restart: always
    build:
      context: ./reverse-proxy
      dockerfile: Dockerfile

  frontend:
    container_name: fit_frontend-test
    restart: always
    depends_on: 
      - reverseproxy
      - database
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
      - 'config=test'
    environment:
      - PORT=4200
    
  backend:
    container_name: fit_backend-test
    restart: always
    depends_on: 
      - reverseproxy
      - database
    environment:
      - RELOAD=False
      - PORT=5000
    build:
      context: ./backend
      dockerfile: Dockerfile

  database:
    container_name: fit_database-test
    depends_on:
     - reverseproxy
    build:
      context: ./database
      dockerfile: Dockerfile
    # This will make the data persistent  
    # volumes:
    #   - '${PWD}/volumes/database:/var/lib/postgresql/data'
    # Not possible to move the database.env file to the /database folder because its a seperate container
    env_file: './backend/database.env'    
    ports:
      - 5432:5432