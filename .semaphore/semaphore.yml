version: v1.0
name: lint, build and test
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804
auto_cancel:
  running:
    when: "true"
fail_fast:
  cancel:
    when: "true"
blocks:
  - name: Checkout
    task:
      jobs:
        - name: lint Python
          commands: 
            - pip install flake8
            - flake8 ./backend/app/ --exit-zero --tee --output-file=lint_python.txt -vv
        - name: lint Dockerfiles
          commands:
            - printf "\n\nBackend\n------------------\n" >> lint_dockerfiles.txt && make lint-dockerfile f="./test/Dockerfile | tee -a lint_dockerfiles.txt"
            - printf "\n\nDatabase\n------------------\n" >> lint_dockerfiles.txt && make lint-dockerfile f="./database/Dockerfile | tee -a lint_dockerfiles.txt"
            - printf "\n\nFrontend\n------------------\n" >> lint_dockerfiles.txt && make lint-dockerfile f="./frontend/Dockerfile | tee -a lint_dockerfiles.txt"
            - printf "\n\nReverse-proxy\n------------------\n" >> lint_dockerfiles.txt && make lint-dockerfile f="./reverse-proxy/Dockerfile | tee -a lint_dockerfiles.txt"
        - name: unit test backend
          commands: 
            - make test-unit
        # - name: lint Angular
        #   commands:
        #     - sem-version node 12.0
        #     - npm install -g @angular/cli
        #     - cd frontend
        #     - ng lint
      prologue:
        commands:
          - checkout
          - sem-version python 3.7
          - export GIT_COMMIT_SHA=$(git rev-parse --short HEAD)
          - export GIT_COMMIT_SHA_LONG=$(git rev-parse HEAD)
          - export GIT_COMMIT_MSG=$(git show -s --format=%B ${GIT_COMMIT_SHA})
      epilogue:
        always:
          commands:
            - artifact push job ./lint_*.txt
        on_fail:
          commands:
            - curl -d message="**[Semaphore[bot]](${SEMAPHORE_ORGANIZATION_URL})** [lint, build and test](${SEMAPHORE_ORGANIZATION_URL}/workflows/${SEMAPHORE_WORKFLOW_ID}) _${SEMAPHORE_JOB_RESULT}_ — [${GIT_COMMIT_SHA}](github.com/bamaas/FullStackFit/commit/${GIT_COMMIT_SHA_LONG}) *${GIT_COMMIT_MSG}*" -d level=error https://webhooks.gitter.im/e/afa7445bc110e2ed8000
  - name: Build
    task:
      jobs:
        - name: database
          commands:
            - make build-db
            - docker tag fullstackfit_database:b.${GIT_COMMIT_SHA} ${DOCKER_USERNAME}/registry:fullstackfit_database.${GIT_COMMIT_SHA}
            - docker push ${DOCKER_USERNAME}/registry:fullstackfit_database.${GIT_COMMIT_SHA}
        - name: backend
          commands:
            - make build-be
            - docker tag fullstackfit_backend:b.${GIT_COMMIT_SHA} ${DOCKER_USERNAME}/registry:fullstackfit_backend.${GIT_COMMIT_SHA}
            - docker push ${DOCKER_USERNAME}/registry:fullstackfit_backend.${GIT_COMMIT_SHA}
        - name: frontend
          commands:
            - make build-fe
            - docker tag fullstackfit_frontend:b.${GIT_COMMIT_SHA} ${DOCKER_USERNAME}/registry:fullstackfit_frontend.${GIT_COMMIT_SHA}
            - docker push ${DOCKER_USERNAME}/registry:fullstackfit_frontend.${GIT_COMMIT_SHA}
        - name: proxy
          commands:
            - make build-proxy
            - docker tag fullstackfit_reverseproxy:b.${GIT_COMMIT_SHA} ${DOCKER_USERNAME}/registry:fullstackfit_reverseproxy.${GIT_COMMIT_SHA}
            - docker push ${DOCKER_USERNAME}/registry:fullstackfit_reverseproxy.${GIT_COMMIT_SHA}
      prologue:
        commands:
          - checkout
          - export GIT_COMMIT_SHA=$(git rev-parse --short HEAD)
          - export GIT_COMMIT_SHA_LONG=$(git rev-parse HEAD)
          - export GIT_COMMIT_MSG=$(git show -s --format=%B ${GIT_COMMIT_SHA})
          - echo $GIT_COMMIT_SHA
          - echo $DOCKER_PASSWORD | docker login --username "$DOCKER_USERNAME" --password-stdin
      epilogue:
        on_fail:
          commands:
            - curl -d message="**[Semaphore[bot]](${SEMAPHORE_ORGANIZATION_URL})** [lint, build and test](${SEMAPHORE_ORGANIZATION_URL}/workflows/${SEMAPHORE_WORKFLOW_ID}) _${SEMAPHORE_JOB_RESULT}_ — [${GIT_COMMIT_SHA}](github.com/bamaas/FullStackFit/commit/${GIT_COMMIT_SHA_LONG}) *${GIT_COMMIT_MSG}*" -d level=error https://webhooks.gitter.im/e/afa7445bc110e2ed8000
      secrets:
        - name: docker
  - name: Test
    task:
      jobs:
        - name: api
          commands:
            - sh testcontainer -v environment:localhost testsuites/ws.robot
        - name: e2e (Linux - Chrome)
          commands:
            - sh testcontainer -v environment:localhost -v remote_webdriver:false -v browser:Chrome testsuites/gui.robot
        - name: e2e (W10 - Chrome)
          commands:
            - sh testcontainer -v environment:localhost -v remote_webdriver:true -v capabilities:w10_chrome -v remote_url:${BROWSERSTACK_URL} testsuites/gui.robot
        # - name: e2e (W10 - Firefox)
        #   commands:
        #     - sh testcontainer -v environment:localhost -v remote_webdriver:true -v capabilities:w10_firefox -v remote_url:${BROWSERSTACK_URL} testsuites/gui.robot
        # - name: e2e (Mac - Chrome)
        #   commands:
        #     - sh testcontainer -v environment:localhost -v remote_webdriver:true -v capabilities:mac_chrome -v remote_url:${BROWSERSTACK_URL} testsuites/gui.robot
      prologue:
        commands:
          - checkout
          - export GIT_COMMIT_SHA=$(git rev-parse --short HEAD)
          - export GIT_COMMIT_SHA_LONG=$(git rev-parse HEAD)
          - export GIT_COMMIT_MSG=$(git show -s --format=%B ${GIT_COMMIT_SHA})
          - echo $GIT_COMMIT_SHA
          # create .env file from environment variables
          - echo BROWSERSTACK_URL=${BROWSERSTACK_URL} >> ./test/.env
          - echo BROWSERSTACK_USER=${BROWSERSTACK_USER} >> ./test/.env
          - echo BROWSERSTACK_KEY=${BROWSERSTACK_KEY} >> ./test/.env
          - echo SEMAPHORE_GIT_PR_NAME=${SEMAPHORE_GIT_PR_NAME} >> ./test/.env
          - echo GIT_COMMIT_SHA=${GIT_COMMIT_SHA} >> ./test/.env
          # Docker
          - echo $DOCKER_PASSWORD | docker login --username "$DOCKER_USERNAME" --password-stdin
          # Pull images from bamaas/registry (private container registry)
          - echo ${DOCKER_USERNAME}/registry:fullstackfit_frontend.${GIT_COMMIT_SHA} ${DOCKER_USERNAME}/registry:fullstackfit_backend.${GIT_COMMIT_SHA} ${DOCKER_USERNAME}/registry:fullstackfit_reverseproxy.${GIT_COMMIT_SHA} ${DOCKER_USERNAME}/registry:fullstackfit_database.${GIT_COMMIT_SHA} | xargs -n 1 docker pull
          # Retag to latest
          - echo $DOCKER_USERNAME/registry:fullstackfit_frontend.$GIT_COMMIT_SHA $DOCKER_USERNAME/fullstackfit_frontend:latest $DOCKER_USERNAME/registry:fullstackfit_backend.$GIT_COMMIT_SHA ls$DOCKER_USERNAME/fullstackfit_backend:latest $DOCKER_USERNAME/registry:fullstackfit_database.$GIT_COMMIT_SHA $DOCKER_USERNAME/fullstackfit_database:latest $DOCKER_USERNAME/registry:fullstackfit_reverseproxy.$GIT_COMMIT_SHA $DOCKER_USERNAME/fullstackfit_reverseproxy:latest | xargs -n 2 docker tag
          # Start application with 'make latest'. In this way we start the application the same was as we do in production.
          - make latest
      epilogue:
        always:
          commands:
            - make shutdown
            - artifact push job ./test/logs/log.html
            - artifact push job ./test/logs/output.xml
            - artifact push job ./test/logs/report.html
        on_pass:
          commands:
            - curl -d message="**[Semaphore[bot]](${SEMAPHORE_ORGANIZATION_URL})** [lint, build and test](${SEMAPHORE_ORGANIZATION_URL}/workflows/${SEMAPHORE_WORKFLOW_ID}) _${SEMAPHORE_JOB_RESULT}_ — [${GIT_COMMIT_SHA}](github.com/bamaas/FullStackFit/commit/${GIT_COMMIT_SHA_LONG}) *${GIT_COMMIT_MSG}*" -d level=info https://webhooks.gitter.im/e/afa7445bc110e2ed8000
        on_fail:
          commands:
            - curl -d message="**[Semaphore[bot]](${SEMAPHORE_ORGANIZATION_URL})** [lint, build and test](${SEMAPHORE_ORGANIZATION_URL}/workflows/${SEMAPHORE_WORKFLOW_ID}) _${SEMAPHORE_JOB_RESULT}_ — [${GIT_COMMIT_SHA}](github.com/bamaas/FullStackFit/commit/${GIT_COMMIT_SHA_LONG}) *${GIT_COMMIT_MSG}*" -d level=error https://webhooks.gitter.im/e/afa7445bc110e2ed8000
      secrets:
        - name: docker
        - name: browserstack
  - name: Notify
    task:
      jobs:
        - name: to Gitter
          commands:
            - curl -d message="**[Semaphore[bot]](${SEMAPHORE_ORGANIZATION_URL})** [lint build and test](${SEMAPHORE_ORGANIZATION_URL}/workflows/${SEMAPHORE_WORKFLOW_ID}) ${SEMAPHORE_JOB_RESULT} — [${GIT_COMMIT_SHA}](github.com/bamaas/FullStackFit/commit/${GIT_COMMIT_SHA_LONG}) *${GIT_COMMIT_MSG}*" -d level=info https://webhooks.gitter.im/e/afa7445bc110e2ed8000
      prologue:
        commands:
          - checkout
          - export GIT_COMMIT_SHA=$(git rev-parse --short HEAD)
          - export GIT_COMMIT_SHA_LONG=$(git rev-parse HEAD)
          - export GIT_COMMIT_MSG=$(git show -s --format=%B ${GIT_COMMIT_SHA})
promotions:
- name: Deploy
  pipeline_file: deploy-prod.yml
  auto_promote:
    when: "result = 'passed' and branch = 'master'"
execution_time_limit:
  minutes: 30